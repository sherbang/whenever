name: Build and publish wheels

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build wheels
        run: |
          pip install cibuildwheel==2.17.0
          cibuildwheel --output-dir dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-linux-${{ matrix.target }}
          path: dist/*.whl

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        run: |
          pip install cibuildwheel==2.17.0
          cibuildwheel --output-dir dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist/*.whl

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Build wheels
        run: |
          pip install cibuildwheel==2.17.0
          cibuildwheel --output-dir dist
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.target }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        run: |
          pip install build
          python -m build --sdist --outdir dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        run: |
          pip install twine
          twine upload dist/*
        env:
          TWINE_UESRNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          TWINE_REPOSITORY: testpypi
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
