name: Checks

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        # Note: pypy/pytest fails sometimes (https://github.com/pypy/pypy/issues/3959)
        python-version: ["3.9", "3.10", "3.11", "3.12", "pypy3.9", "pypy3.10"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: "Test Rust"
        if: matrix.os == 'ubuntu-latest'
        run: |
          cargo test

      - name: Install and test
        if: ${{ !((matrix.python-version == '3.12') && (matrix.os == 'ubuntu-latest')) }}
        shell: bash
        run: |
          pip install .
          pip install -r requirements/test.txt
          pytest tests/

      - name: Install and test (incl coverage)
        if: ${{ (matrix.python-version == '3.12') && (matrix.os == 'ubuntu-latest') }}
        shell: bash
        run: |
          pip install .
          pip install -r requirements/test.txt
          pytest tests/ --cov=whenever

  Test-pure-python-implementation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install .
          pip install -r requirements/test.txt
          pytest tests/
        env:
          WHENEVER_NO_BUILD_RUST_EXT: "1"

  Linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install -U pip
          pip install -r requirements/lint.txt
          make ci-lint
        env:
          WHENEVER_NO_BUILD_RUST_EXT: "1"

  Typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - run: |
          pip install .
          pip install -r requirements/typecheck.txt
          pip install -r requirements/test.txt
          make typecheck
        env:
          WHENEVER_NO_BUILD_RUST_EXT: "1"
